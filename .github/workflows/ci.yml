# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['**', '!update/**', '!pr/**']
  push:
    branches: ['**', '!update/**', '!pr/**']
    tags: [v*]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


concurrency:
  group: ${{ github.workflow }} @ ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        scala: [2.12]
        java:
          - temurin@8
          - temurin@11
          - temurin@17
          - graal_22.3.2@11
          - graalvm@17
          - corretto@17
          - semeru@17
        project: [sbt-typelevelJVM]
        exclude:
          - java: temurin@11
            os: macos-latest
          - java: temurin@11
            os: windows-latest
          - java: temurin@17
            os: macos-latest
          - java: temurin@17
            os: windows-latest
          - java: graal_22.3.2@11
            os: macos-latest
          - java: graal_22.3.2@11
            os: windows-latest
          - java: graalvm@17
            os: macos-latest
          - java: graalvm@17
            os: windows-latest
          - java: corretto@17
            os: macos-latest
          - java: corretto@17
            os: windows-latest
          - java: semeru@17
            os: macos-latest
          - java: semeru@17
            os: windows-latest
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    steps:
      - name: Ignore line ending differences in git
        if: contains(runner.os, 'windows')
        shell: bash
        run: git config --global core.autocrlf false

      - name: Checkout current branch (full)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@8)
        id: setup-java-temurin-8
        if: matrix.java == 'temurin@8'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 8
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@8' && steps.setup-java-temurin-8.outputs.cache-hit == 'false'
        shell: bash
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' reload +update

      - name: Setup Java (temurin@11)
        id: setup-java-temurin-11
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@11' && steps.setup-java-temurin-11.outputs.cache-hit == 'false'
        shell: bash
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' reload +update

      - name: Setup Java (temurin@17)
        id: setup-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@17' && steps.setup-java-temurin-17.outputs.cache-hit == 'false'
        shell: bash
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' reload +update

      - name: Setup GraalVM (graal_22.3.2@11)
        id: setup-graalvm-22_3_2-11
        if: matrix.java == 'graal_22.3.2@11'
        uses: graalvm/setup-graalvm@v1
        with:
          version: 22.3.2
          java-version: 11
          cache: sbt

      - name: sbt update
        if: matrix.java == 'graal_22.3.2@11' && steps.setup-graalvm-22_3_2-11.outputs.cache-hit == 'false'
        shell: bash
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' reload +update

      - name: Setup Java (graalvm@17)
        id: setup-java-graalvm-17
        if: matrix.java == 'graalvm@17'
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: graalvm
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'graalvm@17' && steps.setup-java-graalvm-17.outputs.cache-hit == 'false'
        shell: bash
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' reload +update

      - name: Setup Java (corretto@17)
        id: setup-java-corretto-17
        if: matrix.java == 'corretto@17'
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'corretto@17' && steps.setup-java-corretto-17.outputs.cache-hit == 'false'
        shell: bash
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' reload +update

      - name: Setup Java (semeru@17)
        id: setup-java-semeru-17
        if: matrix.java == 'semeru@17'
        uses: actions/setup-java@v3
        with:
          distribution: semeru
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'semeru@17' && steps.setup-java-semeru-17.outputs.cache-hit == 'false'
        shell: bash
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' reload +update

      - name: Check that workflows are up to date
        shell: bash
        run: sbt githubWorkflowCheck

      - name: Check headers and formatting
        if: matrix.java == 'temurin@8' && matrix.os == 'ubuntu-latest'
        shell: bash
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' headerCheckAll scalafmtCheckAll 'project /' scalafmtSbtCheck

      - name: Check scalafix lints
        if: matrix.java == 'temurin@8' && matrix.os == 'ubuntu-latest'
        shell: bash
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' 'scalafixAll --check'

      - name: Test
        shell: bash
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' test

      - name: Check binary compatibility
        if: matrix.java == 'temurin@8' && matrix.os == 'ubuntu-latest'
        shell: bash
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' mimaReportBinaryIssues

      - name: Generate API documentation
        if: matrix.java == 'temurin@8' && matrix.os == 'ubuntu-latest'
        shell: bash
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' doc

      - name: Make target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
        shell: bash
        run: mkdir -p github/target github-actions/target kernel/target versioning/target ci-release/target scalafix/target site/target ci-signing/target mergify/target unidoc/target mima/target no-publish/target sonatype/target ci/target sonatype-ci-release/target core/target settings/target project/target

      - name: Compress target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
        shell: bash
        run: tar cf targets.tar github/target github-actions/target kernel/target versioning/target ci-release/target scalafix/target site/target ci-signing/target mergify/target unidoc/target mima/target no-publish/target sonatype/target ci/target sonatype-ci-release/target core/target settings/target project/target

      - name: Upload target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
        uses: actions/upload-artifact@v3
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-${{ matrix.scala }}-${{ matrix.project }}
          path: targets.tar

  publish:
    name: Publish Artifacts
    needs: [build]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
    strategy:
      matrix:
        os: [ubuntu-latest]
        java: [temurin@8]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45
    steps:
      - name: Ignore line ending differences in git
        if: contains(runner.os, 'windows')
        run: git config --global core.autocrlf false

      - name: Checkout current branch (full)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@8)
        id: setup-java-temurin-8
        if: matrix.java == 'temurin@8'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 8
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@8' && steps.setup-java-temurin-8.outputs.cache-hit == 'false'
        run: sbt reload +update

      - name: Setup Java (temurin@11)
        id: setup-java-temurin-11
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@11' && steps.setup-java-temurin-11.outputs.cache-hit == 'false'
        run: sbt reload +update

      - name: Setup Java (temurin@17)
        id: setup-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@17' && steps.setup-java-temurin-17.outputs.cache-hit == 'false'
        run: sbt reload +update

      - name: Setup GraalVM (graal_22.3.2@11)
        id: setup-graalvm-22_3_2-11
        if: matrix.java == 'graal_22.3.2@11'
        uses: graalvm/setup-graalvm@v1
        with:
          version: 22.3.2
          java-version: 11
          cache: sbt

      - name: sbt update
        if: matrix.java == 'graal_22.3.2@11' && steps.setup-graalvm-22_3_2-11.outputs.cache-hit == 'false'
        run: sbt reload +update

      - name: Setup Java (graalvm@17)
        id: setup-java-graalvm-17
        if: matrix.java == 'graalvm@17'
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: graalvm
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'graalvm@17' && steps.setup-java-graalvm-17.outputs.cache-hit == 'false'
        run: sbt reload +update

      - name: Setup Java (corretto@17)
        id: setup-java-corretto-17
        if: matrix.java == 'corretto@17'
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'corretto@17' && steps.setup-java-corretto-17.outputs.cache-hit == 'false'
        run: sbt reload +update

      - name: Setup Java (semeru@17)
        id: setup-java-semeru-17
        if: matrix.java == 'semeru@17'
        uses: actions/setup-java@v3
        with:
          distribution: semeru
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'semeru@17' && steps.setup-java-semeru-17.outputs.cache-hit == 'false'
        run: sbt reload +update

      - name: Download target directories (2.12, sbt-typelevelJVM)
        uses: actions/download-artifact@v3
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-2.12-sbt-typelevelJVM

      - name: Inflate target directories (2.12, sbt-typelevelJVM)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Import signing key
        if: env.PGP_SECRET != '' && env.PGP_PASSPHRASE == ''
        env:
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        run: echo $PGP_SECRET | base64 -di | gpg --import

      - name: Import signing key and strip passphrase
        if: env.PGP_SECRET != '' && env.PGP_PASSPHRASE != ''
        env:
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        run: |
          echo "$PGP_SECRET" | base64 -di > /tmp/signing-key.gpg
          echo "$PGP_PASSPHRASE" | gpg --pinentry-mode loopback --passphrase-fd 0 --import /tmp/signing-key.gpg
          (echo "$PGP_PASSPHRASE"; echo; echo) | gpg --command-fd 0 --pinentry-mode loopback --change-passphrase $(gpg --list-secret-keys --with-colons 2> /dev/null | grep '^sec:' | cut --delimiter ':' --fields 5 | tail -n 1)

      - name: Publish
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_CREDENTIAL_HOST: ${{ secrets.SONATYPE_CREDENTIAL_HOST }}
        run: sbt tlCiRelease

  dependency-submission:
    name: Submit Dependencies
    if: github.event_name != 'pull_request'
    strategy:
      matrix:
        os: [ubuntu-latest]
        java: [temurin@8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Ignore line ending differences in git
        if: contains(runner.os, 'windows')
        run: git config --global core.autocrlf false

      - name: Checkout current branch (full)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@8)
        id: setup-java-temurin-8
        if: matrix.java == 'temurin@8'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 8
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@8' && steps.setup-java-temurin-8.outputs.cache-hit == 'false'
        run: sbt reload +update

      - name: Setup Java (temurin@11)
        id: setup-java-temurin-11
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@11' && steps.setup-java-temurin-11.outputs.cache-hit == 'false'
        run: sbt reload +update

      - name: Setup Java (temurin@17)
        id: setup-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@17' && steps.setup-java-temurin-17.outputs.cache-hit == 'false'
        run: sbt reload +update

      - name: Setup GraalVM (graal_22.3.2@11)
        id: setup-graalvm-22_3_2-11
        if: matrix.java == 'graal_22.3.2@11'
        uses: graalvm/setup-graalvm@v1
        with:
          version: 22.3.2
          java-version: 11
          cache: sbt

      - name: sbt update
        if: matrix.java == 'graal_22.3.2@11' && steps.setup-graalvm-22_3_2-11.outputs.cache-hit == 'false'
        run: sbt reload +update

      - name: Setup Java (graalvm@17)
        id: setup-java-graalvm-17
        if: matrix.java == 'graalvm@17'
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: graalvm
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'graalvm@17' && steps.setup-java-graalvm-17.outputs.cache-hit == 'false'
        run: sbt reload +update

      - name: Setup Java (corretto@17)
        id: setup-java-corretto-17
        if: matrix.java == 'corretto@17'
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'corretto@17' && steps.setup-java-corretto-17.outputs.cache-hit == 'false'
        run: sbt reload +update

      - name: Setup Java (semeru@17)
        id: setup-java-semeru-17
        if: matrix.java == 'semeru@17'
        uses: actions/setup-java@v3
        with:
          distribution: semeru
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'semeru@17' && steps.setup-java-semeru-17.outputs.cache-hit == 'false'
        run: sbt reload +update

      - name: Submit Dependencies
        uses: scalacenter/sbt-dependency-submission@v2
        with:
          modules-ignore: sbt-typelevelJVM docs sbt-typelevelNative sbt-typelevel sbt-typelevelJS
          configs-ignore: test scala-tool scala-doc-tool

  validate-steward:
    name: Validate Steward Config
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v3

      - uses: coursier/setup-action@v1
        with:
          apps: scala-steward

      - run: scala-steward validate-repo-config .scala-steward.conf

  site:
    name: Generate Site
    strategy:
      matrix:
        os: [ubuntu-latest]
        java: [temurin@8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Ignore line ending differences in git
        if: contains(runner.os, 'windows')
        run: git config --global core.autocrlf false

      - name: Checkout current branch (full)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@8)
        id: setup-java-temurin-8
        if: matrix.java == 'temurin@8'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 8
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@8' && steps.setup-java-temurin-8.outputs.cache-hit == 'false'
        run: sbt reload +update

      - name: Setup Java (temurin@11)
        id: setup-java-temurin-11
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@11' && steps.setup-java-temurin-11.outputs.cache-hit == 'false'
        run: sbt reload +update

      - name: Setup Java (temurin@17)
        id: setup-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@17' && steps.setup-java-temurin-17.outputs.cache-hit == 'false'
        run: sbt reload +update

      - name: Setup GraalVM (graal_22.3.2@11)
        id: setup-graalvm-22_3_2-11
        if: matrix.java == 'graal_22.3.2@11'
        uses: graalvm/setup-graalvm@v1
        with:
          version: 22.3.2
          java-version: 11
          cache: sbt

      - name: sbt update
        if: matrix.java == 'graal_22.3.2@11' && steps.setup-graalvm-22_3_2-11.outputs.cache-hit == 'false'
        run: sbt reload +update

      - name: Setup Java (graalvm@17)
        id: setup-java-graalvm-17
        if: matrix.java == 'graalvm@17'
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: graalvm
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'graalvm@17' && steps.setup-java-graalvm-17.outputs.cache-hit == 'false'
        run: sbt reload +update

      - name: Setup Java (corretto@17)
        id: setup-java-corretto-17
        if: matrix.java == 'corretto@17'
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'corretto@17' && steps.setup-java-corretto-17.outputs.cache-hit == 'false'
        run: sbt reload +update

      - name: Setup Java (semeru@17)
        id: setup-java-semeru-17
        if: matrix.java == 'semeru@17'
        uses: actions/setup-java@v3
        with:
          distribution: semeru
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'semeru@17' && steps.setup-java-semeru-17.outputs.cache-hit == 'false'
        run: sbt reload +update

      - name: Generate site
        run: sbt docs/tlSite

      - name: Publish site
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/series/0.4'
        uses: peaceiris/actions-gh-pages@v3.9.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: mdocs/target/docs/site
          keep_files: true
